# Initialize the random forest regressor with 100 trees
rf_regressor = RandomForestRegressor(n_estimators=100)

# Fit the regressor to the training data
rf_regressor.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = rf_regressor.predict(X_test)

# Evaluate the performance of the model using different metrics
# Mean squared error (MSE)
mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error:', mse)

# Root mean squared error (RMSE)
rmse = np.sqrt(mse)
print('Root Mean Squared Error:', rmse)

# Mean absolute error (MAE)
mae = mean_absolute_error(y_test, y_pred)
print('Mean Absolute Error:', mae)

# R-squared
r2 = r2_score(y_test, y_pred)
print('R-squared:', r2)


# Plot actual and predicted values for Random Forest
plt.figure(figsize=(14,8))
plt.title("Model for PM2.5 using Random Forest Regression")
#plt.xlabel("Date", fontsize = 15)
plt.ylabel("PM2.5",fontsize=15)
plt.plot(y_train.values,'.', label='Train')
plt.plot(y_test.values, 'r.',label='Test')
plt.plot(y_pred,'g.', label='Predicted')
plt.legend()
plt.show()